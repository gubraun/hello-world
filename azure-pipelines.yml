# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
  COVERITY_TOOL_HOME: $(Agent.BuildDirectory)/cov-analysis

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

#container:
#  image: 'gubraun/coverity:2019.06'
#  endpoint: gubraun-docker
#  options: --hostname build-vm --mac-address 02:42:ac:11:00:03

steps:
# Pull Coverity analysis installation from cache
#- task: Cache@2
#  inputs:
#    key: '"coverity-analysis-2020.06" | "$(Agent.OS)"'
#    path: $(COVERITY_TOOL_HOME)
#    cacheHitVar: CACHE_RESTORED
#  displayName: 'Cache Coverity Tool Installation'

# Copy and install Coverity analysis package
- script: |
    cd $(Agent.BuildDirectory)
    curl -s -L --user admin:$(COVERITY_AUTHKEY) -o license.dat $(COVERITY_URL)/downloadFile.htm?fn=license.dat
    curl -s -L --user admin:$(COVERITY_AUTHKEY) $(COVERITY_URL)/downloadFile.htm?fn=cov-analysis-linux64-2020.06.tar.gz | tar -xvzf -
    mv cov-analysis-linux64-2020.06 cov-analysis
    cp license.dat ./cov-analysis/bin
  condition: ne(variables.CACHE_RESTORED, 'true')
  displayName: 'Install Coverity'

# Configure Coverity
- script: | 
    $(COVERITY_TOOL_HOME)/bin/cov-configure --java
    $(COVERITY_TOOL_HOME)/bin/cov-configure --javascript
    $(COVERITY_TOOL_HOME)/bin/cov-configure --gcc
  #condition: ne(variables.CACHE_RESTORED, 'true')
  displayName: 'Configure Coverity'

# Run Coverity scan
- task: synopsys-coverity@1
  inputs:
    coverityService: 'coverity-vm'
    projectName: 'Azure Hello World'
    streamName: 'az-hello-world'
    checkIssues: false
    issueView: 'Outstanding Issues'
    coverityBuildDirectory: '$(Build.Repository.LocalPath)'
    buildCommand: 'gcc -o hello hello.c'
    allowUntrusted: false
    coverityRunType: 'buildanalyzecommit'
    customCommandArgs: true
    covAnalyzeArgs: '--all'


# Reproducer for issue #6 (error: p not supplied)
#- task: synopsys-coverity@1
#  inputs:
#    coverityService: 'coverity-vm'
#    projectName: 'Azure Hello World'
#    streamName: 'az-hello-world'
#    coverityBuildDirectory: '$(Build.Repository.LocalPath)'
#    coverityRunType: 'custom'
#    customCoverityCommands: 'cov-analyze --ident'
#    allowUntrusted: true

#- task: AzureCLI@2
#  inputs:
#    azureSubscription: azure-connection
#    scriptType: bash
#    scriptLocation: inlineScript
#    inlineScript: |
#      sh mount-coverity.sh
#      df -h
#  condition: ne(variables.CACHE_RESTORED, 'true')
#  displayName: Azure CLI

#- script: |
#    $(COVERITY_TOOL_HOME)/bin/cov-analyze --ident
#    $(COVERITY_TOOL_HOME)/bin/cov-configure --config coverity_config.xml --gcc
#  displayName: 'Configure Coverity'

#- script: $(COVERITY_TOOL_HOME)/bin/cov-build --config coverity_config.xml --dir idir gcc -o hello hello.c
#  displayName: 'Compile C source file'

#- script: $(mntPath)/cov-analysis/bin/cov-analyze --dir idir 
#  displayName: 'Run Coverity analysis'





# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
  resourceGroupNamee: coverity
  storageAccountName: coveritystore
  fileShareName: cov-analysis-share
  mntPath: /mnt/$(storageAccountName)/$(fileShareName)

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

#container:
#  image: 'gubraun/coverity:2019.06'
#  endpoint: gubraun-docker
#  options: --hostname build-vm --mac-address 02:42:ac:11:00:03

steps:
- task: AzureCLI@2
  displayName: Azure CLI
  inputs:
    azureSubscription: azure-connection
    scriptType: bash
    scriptPath: mount-coverity.sh
 
- script: df
  displayName: Check if mount worked

#- script: |
#    cov-analyze --ident
#    cov-configure --config coverity_config.xml --gcc
#  displayName: 'Configure Coverity'

#- script: cov-build --config coverity_config.xml --dir idir gcc -o hello hello.c
#  displayName: 'Compile C source file'

#- script: cov-analyze --dir idir 
#  displayName: 'Run Coverity analysis'

#- script: |
#    echo Add other tasks to build, test, and deploy your project.
#    echo See https://aka.ms/yaml
#  displayName: 'Run a multi-line script'

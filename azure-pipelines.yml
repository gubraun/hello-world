# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

#container:
#  image: 'gubraun/coverity:2019.06'
#  endpoint: gubraun-docker
#  options: --hostname build-vm --mac-address 02:42:ac:11:00:03

steps:
- task: AzureCLI@2
  displayName: Azure CLI
  inputs:
    azureSubscription: azure-connection
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
        az --version
        az account show
        resourceGroupName="coverity"
        storageAccountName="coveritystore"
        fileShareName="cov-analysis-share"
        mntPath="/mnt/$storageAccountName/$fileShareName"
        sudo mkdir -p $mntPath
        # This command assumes you have logged in with az login
        httpEndpoint=$(az storage account show \
            --resource-group $resourceGroupName \
            --name $storageAccountName \
            --query "primaryEndpoints.file" | tr -d '"')
        smbPath=$(echo $httpEndpoint | cut -c7-$(expr length $httpEndpoint))$fileShareName
        storageAccountKey=$(az storage account keys list \
            --resource-group $resourceGroupName \
            --account-name $storageAccountName \
            --query "[0].value" | tr -d '"')
        sudo mount -t cifs $smbPath $mntPath -o vers=3.0,username=$storageAccountName,password=$storageAccountKey,serverino
        df



#- script: |
#    cov-analyze --ident
#    cov-configure --config coverity_config.xml --gcc
#  displayName: 'Configure Coverity'

#- script: cov-build --config coverity_config.xml --dir idir gcc -o hello hello.c
#  displayName: 'Compile C source file'

#- script: cov-analyze --dir idir 
#  displayName: 'Run Coverity analysis'

#- script: |
#    echo Add other tasks to build, test, and deploy your project.
#    echo See https://aka.ms/yaml
#  displayName: 'Run a multi-line script'

# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
  resourceGroupName: coverity
  storageAccountName: coveritystore
  fileShareName: cov-analysis-share
  mntPath: /mnt/$(storageAccountName)/$(fileShareName)
  COVERITY_TOOL_HOME: $(Agent.BuildDirectory)/cov-analysis

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

#container:
#  image: 'gubraun/coverity:2019.06'
#  endpoint: gubraun-docker
#  options: --hostname build-vm --mac-address 02:42:ac:11:00:03

steps:
- task: AzureCLI@2
  displayName: Azure CLI
  inputs:
    azureSubscription: azure-connection
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      sh mount-coverity.sh
      df -h

- script: |
    cd $(Agent.BuildDirectory)
    cp $(mntPath)/cov-analysis-linux64-2019.12.tar.gz .
    cp $(mntPath)/cov-analysis-linux64-2019.12/bin/license.dat .
    tar -xvzf cov-analysis-linux64-2019.12.tar.gz
    mv cov-analysis-linux64-2019.12 cov-analysis
    cp license.dat ./cov-analysis/bin
  displayName: 'Install Coverity'
    

- task: Cache@2
  inputs:
    key: '"coverity-analysis-2019.12" | "$(Agent.OS)"'
    path: $(COVERITY_TOOL_HOME)
  displayName: 'Cache Coverity Tool Installation'

#- task: synopsys-coverity@1
#  inputs:
#    coverityService: 'coverity-vm'
#    projectName: 'Azure Hello World'
#    streamName: 'az-hello-world'
#    checkIssues: false
#    issueView: 'Outstanding Issues'
#    coverityBuildDirectory: '$(Build.Repository.LocalPath)'
#    buildCommand: 'gcc -o hello hello.c'
#    allowUntrusted: true

# Reproducer for issue #6 (error: p not supplied)
#- task: synopsys-coverity@1
#  inputs:
#    coverityService: 'coverity-vm'
#    projectName: 'Azure Hello World'
#    streamName: 'az-hello-world'
#    coverityBuildDirectory: '$(Build.Repository.LocalPath)'
#    coverityRunType: 'custom'
#    customCoverityCommands: 'cov-analyze --ident'
#    allowUntrusted: true

- script: |
    $(COVERITY_TOOL_HOME)/bin/cov-analyze --ident
    $(COVERITY_TOOL_HOME)/bin/cov-configure --config coverity_config.xml --gcc
  displayName: 'Configure Coverity'

- script: $(COVERITY_TOOL_HOME)/bin/cov-build --config coverity_config.xml --dir idir gcc -o hello hello.c
  displayName: 'Compile C source file'

#- script: $(mntPath)/cov-analysis/bin/cov-analyze --dir idir 
#  displayName: 'Run Coverity analysis'

#- script: |
#    echo Add other tasks to build, test, and deploy your project.
#    echo See https://aka.ms/yaml
#  displayName: 'Run a multi-line script'
